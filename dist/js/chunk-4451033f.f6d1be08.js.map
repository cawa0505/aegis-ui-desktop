{"version":3,"sources":["webpack:///./src/components/code-box.vue?3233","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./src/components/code-box.vue?0ba4","webpack:///./src/components/code-box.vue?3447","webpack:///./src/components/code-box.vue?1a0a","webpack:///./src/components/code-box.vue","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_code_box_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_code_box_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","d","__webpack_exports__","_asyncToGenerator","_core_js_promise__WEBPACK_IMPORTED_MODULE_0__","_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","a","then","fn","self","this","args","arguments","apply","err","undefined","render","_vm","_h","$createElement","_c","_self","staticClass","_t","attrs","source","markdown","directives","name","rawName","expression","_v","type","domProps","textContent","_s","code","staticStyle","border","block","icon","on","click","$event","showCode","staticRenderFns","external_Vue_default","use","d_message","d_button","ae_icon","code_boxvue_type_script_lang_ts_CodeBox","_Vue","CodeBox","_this","Object","classCallCheck","inherits","createClass","$message","success","tslib_es6","vue_property_decorator","String","vue_class_component_common_default","code_boxvue_type_script_lang_ts_","components_code_boxvue_type_script_lang_ts_","component","componentNormalizer","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","obj","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","Promise","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"js/chunk-4451033f.f6d1be08.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./code-box.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./code-box.vue?vue&type=style&index=0&lang=less&\"","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"code-box\"},[_c('section',{staticClass:\"code-box-demo\"},[_vm._t(\"demo\")],2),_c('markdown',{staticClass:\"code-box-meta\",attrs:{\"source\":_vm.markdown}}),_c('pre',{directives:[{name:\"hljs\",rawName:\"v-hljs\"},{name:\"show\",rawName:\"v-show\",value:(_vm.showCode),expression:\"showCode\"}],staticClass:\"code-box-code markdown-body clearfix\"},[_vm._v(\"    \"),_c('ae-layout',[_vm._v(\"\\n      \"),_c('ae-icon',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.code),expression:\"code\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.copied),expression:\"copied\",arg:\"success\"}],staticClass:\"copy-btn\",attrs:{\"type\":\"copy\"}}),_vm._v(\"\\n      \"),_c('code',{domProps:{\"textContent\":_vm._s(_vm.code)}}),_vm._v(\"\\n    \")],1),_vm._v(\"\\n  \")],1),_c('div',{staticClass:\"show-code-btn\"},[_c('d-button',{staticStyle:{\"border\":\"none\"},attrs:{\"block\":\"\",\"icon\":\"plus\"},on:{\"click\":function($event){_vm.showCode = !_vm.showCode}}},[_c('span',{domProps:{\"textContent\":_vm._s(_vm.showCode ? '隐藏代码' : '显示代码')}})])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Icon from '@/packages/ae-icon';\nimport Button from '@/packages/d-button';\nimport message from '@/packages/d-message';\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport {Prop} from 'vue-property-decorator';\n\nVue.use(message);\nVue.use(Button);\nVue.use(Icon);\n@Component({\n  name: 'CodeBox'\n})\nexport default class CodeBox extends Vue {\n  @Prop(String)\n  public code: string;\n  @Prop(String)\n  public markdown: string;\n  public showCode = false;\n\n  public copied() {\n    this.$message.success('已复制');\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./code-box.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./code-box.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./code-box.vue?vue&type=template&id=391ceaca&xmlns%3Av-clipboard=http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml&\"\nimport script from \"./code-box.vue?vue&type=script&lang=ts&\"\nexport * from \"./code-box.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./code-box.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}